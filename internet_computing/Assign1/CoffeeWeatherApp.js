// Generated by CoffeeScript 1.6.3
(function() {
  var coffeeWeatherApp, http, jQuery;

  http = require('http');

  jQuery = require('jquery');

  coffeeWeatherApp = this;

  exports.canary = function() {
    return true;
  };

  exports.generatePathForHttpRequest = function(WOEID) {
    return '/forecastrss?w=' + WOEID + '&u=f';
  };

  exports.generateHttpOptionsForHttpRequest = function(path) {
    var httpOptions;
    httpOptions = {
      host: 'weather.yahooapis.com',
      port: 80,
      path: path
    };
    return httpOptions;
  };

  exports.parseDataFromWebRequest = function(httpRequest) {
    var dataToReturn;
    dataToReturn = [];
    dataToReturn.push(jQuery(httpRequest).find('yweather\\:location').attr('city'));
    dataToReturn.push(jQuery(httpRequest).find('yweather\\:location').attr('region'));
    dataToReturn.push(jQuery(httpRequest).find('yweather\\:condition').attr('temp'));
    if (dataToReturn[0] === void 0 && dataToReturn[1] === void 0 && dataToReturn[2] === void 0) {
      dataToReturn = ['Unavailable', 'Unavailable', 'Unavailable'];
    }
    return dataToReturn;
  };

  exports.getHttpResponse = function(httpOptions, callback) {
    var handleEndOfResponse, handleResonseOnError, handleResponseOnDataReceived, httpGetFunction, httpResponse;
    httpResponse = '';
    httpGetFunction = function(response) {
      response.on('data', handleResponseOnDataReceived);
      response.on('error', handleResonseOnError);
      return response.on('end', handleEndOfResponse);
    };
    handleResponseOnDataReceived = function(responseData) {
      return httpResponse += responseData;
    };
    handleResonseOnError = function(error) {
      return callback(error);
    };
    handleEndOfResponse = function() {
      return callback(null, coffeeWeatherApp.parseDataFromWebRequest(httpResponse));
    };
    return http.get(httpOptions, httpGetFunction);
  };

  exports.getWeatherInfoFromWOEIDS = function(WOEIDSToTest, callback) {
    var WOEID, callbackFromHttpResponse, httpOptions, path, weatherResults, _i, _len, _results;
    weatherResults = [];
    callbackFromHttpResponse = function(error, content) {
      weatherResults.push(content);
      return callback(error, weatherResults);
    };
    _results = [];
    for (_i = 0, _len = WOEIDSToTest.length; _i < _len; _i++) {
      WOEID = WOEIDSToTest[_i];
      path = coffeeWeatherApp.generatePathForHttpRequest(WOEID);
      httpOptions = coffeeWeatherApp.generateHttpOptionsForHttpRequest(path);
      _results.push(coffeeWeatherApp.getHttpResponse(httpOptions, callbackFromHttpResponse));
    }
    return _results;
  };

}).call(this);
